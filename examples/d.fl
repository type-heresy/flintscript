1
"./to-load.js" :load
2

:define test 1 2 3 ;

:syntax stest dup ref:name ref:make 4 5 6 ;

:define list:one dup list:new list:cons ;

:define load-to swap [ :load ] swap list:cons swap voc:bind ;

\ stack is
:define load:field ( [ name ] fld path -- )
  rot
  ( path fld [ name ] )
  [ :load:field ]
  ( [ load:field ] path fld name )
  swap
  ( path [ load:field ] fld name )
  list:cons
  ( [ path load:field ] fld name )
  swap list:cons
  ( [ fld path load:field ] name )
  swap voc:bind ;

stest test

"./check-load.js" [ bar ] load-to

"./check-fld.js" "check-field" [ baz ] load:field

insert142 bar baz

"./to-import.fl" :import

:file